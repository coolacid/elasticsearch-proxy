# This configuration is based on the Kibana configuration examples and requires
# mod_php to be enabled. It must be wrapped within a virtual host that somehow
# allows access to /usr/local/share/kibana/elasticsearch-proxy and the actual
# Kibana files. Replace logserver.example.com with an actual ES cluster
# hostname! Data is not added via HTTP, but via an elasticsearch client
# node. Thus the necessary methods are forbidden for most users.

# Add authentication, so that user based filtering can be applied.
# You are encouraged to use TLS!

# Run all _search requests for known indices through the proxy filter script
AliasMatch ^/(logstash.*|_all)/_search.*$ /usr/local/share/kibana/elasticsearch-proxy/proxy.php

# The following locations matches don't need user-based filtering

# Allow HTTP methods are allowed to everybody, when it comes to the Kibana index
<LocationMatch "^/(kibana-int|kibana-int/dashboard/|kibana-int/temp)(.*)$">
    ProxyPassMatch http://logserver.example.com:9200/$1$2
    ProxyPassReverse http://logserver.example.com:9200/$1$2
</LocationMatch>

# Some of these patterns are necessary for the paramedic plugin
<LocationMatch "^/(_stats|_cluster/(health|state)|_status|_plugin|_plugin/.*|_nodes|_nodes/.*|_aliases|.*/_aliases|_mapping|.*/_mapping)$">
    # Methods other than GET, POST and OPTIONS are only allowed to someadmin
    <LimitExcept GET POST OPTIONS>
        Require user someadmin
    </LimitExcept>
    ProxyPassMatch http://logserver.example.com:9200/$1
    ProxyPassReverse http://logserver.example.com:9200/$1
</LocationMatch>

# Other requests are not proxied, attempted to fulfil locally and
# should therefore fail
